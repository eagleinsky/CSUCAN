C166 COMPILER V7.53.0.0, CC2                                                               09/03/2014 17:57:04 PAGE 1   


C166 COMPILER V7.53.0.0, COMPILATION OF MODULE CC2
OBJECT MODULE PLACED IN .\obj\CC2.obj
COMPILER INVOKED BY: C:\Keil4\C166\BIN\C166.EXE CC2.C MODV2 BROWSE INCDIR(.\source;.\CANopen\include;.\CANopen\include\X
                    -C164_CANopen;..\keil4;.\CANopen\examples\XC164\Slave) MODV2 DEBUG PRINT(.\list\CC2.lst) TABS(2) OBJECT(.\obj\CC2.obj) 

 stmt lvl     source

    1         //****************************************************************************
    2         // @Module        Capture / Compare Unit 2 (CAPCOM2)
    3         // @Filename      CC2.C
    4         // @Project       EBCU_CPU.dav
    5         //----------------------------------------------------------------------------
    6         // @Controller    Infineon XC164CS-16F20
    7         //
    8         // @Compiler      Keil
    9         //
   10         // @Codegenerator 3.0
   11         //
   12         // @Description   This file contains functions that use the CC2 module.
   13         //
   14         //----------------------------------------------------------------------------
   15         // @Date          2014/9/3 17:56:09
   16         //
   17         //****************************************************************************
   18         
   19         // USER CODE BEGIN (CC2_General,1)
   20         
   21         // USER CODE END
   22         
   23         
   24         
   25         //****************************************************************************
   26         // @Project Includes
   27         //****************************************************************************
   28         
   29         #include "MAIN.H"
   30         
   31         // USER CODE BEGIN (CC2_General,2)
   32         
   33         // USER CODE END
   34         
   35         
   36         //****************************************************************************
   37         // @Macros
   38         //****************************************************************************
   39         
   40         // USER CODE BEGIN (CC2_General,3)
   41         
   42         // USER CODE END
   43         
   44         
   45         //****************************************************************************
   46         // @Defines
   47         //****************************************************************************
   48         
   49         // USER CODE BEGIN (CC2_General,4)
   50         
   51         // USER CODE END
   52         
   53         
   54         //****************************************************************************
C166 COMPILER V7.53.0.0, CC2                                                               09/03/2014 17:57:04 PAGE 2   

   55         // @Typedefs
   56         //****************************************************************************
   57         
   58         // USER CODE BEGIN (CC2_General,5)
   59         
   60         // USER CODE END
   61         
   62         
   63         //****************************************************************************
   64         // @Imported Global Variables
   65         //****************************************************************************
   66         
   67         // USER CODE BEGIN (CC2_General,6)
   68         
   69         // USER CODE END
   70         
   71         
   72         //****************************************************************************
   73         // @Global Variables
   74         //****************************************************************************
   75         
   76         // USER CODE BEGIN (CC2_General,7)
   77         
   78         // USER CODE END
   79         
   80         
   81         //****************************************************************************
   82         // @External Prototypes
   83         //****************************************************************************
   84         
   85         // USER CODE BEGIN (CC2_General,8)
   86         
   87         // USER CODE END
   88         
   89         
   90         //****************************************************************************
   91         // @Prototypes Of Local Functions
   92         //****************************************************************************
   93         
   94         // USER CODE BEGIN (CC2_General,9)
   95         
   96         // USER CODE END
   97         
   98         
   99         //****************************************************************************
  100         // @Function      void CC2_vInit(void) 
  101         //
  102         //----------------------------------------------------------------------------
  103         // @Description   This is the initialization function of the CAPCOM2 function 
  104         //                library. It is assumed that the SFRs used by this library 
  105         //                are in its reset state. 
  106         //
  107         //----------------------------------------------------------------------------
  108         // @Returnvalue   None
  109         //
  110         //----------------------------------------------------------------------------
  111         // @Parameters    None
  112         //
  113         //----------------------------------------------------------------------------
  114         // @Date          2014/9/3
  115         //
  116         //****************************************************************************
C166 COMPILER V7.53.0.0, CC2                                                               09/03/2014 17:57:04 PAGE 3   

  117         
  118         // USER CODE BEGIN (Init,1)
  119         
  120         // USER CODE END
  121         
  122         void CC2_vInit(void)
  123         {
  124  1        // USER CODE BEGIN (Init,2)
  125  1      
  126  1        // USER CODE END
  127  1      
  128  1        ///  -----------------------------------------------------------------------
  129  1        ///  Configuration of CAPCOM2 Control:
  130  1        ///  -----------------------------------------------------------------------
  131  1        ///  - the contents of the port register is changed by the CAPCOM2 unit
  132  1        ///  - staggered mode is enabled
  133  1      
  134  1        CC2_IOC        =  0x0000;      // load CAPCOM2 I/O control register
  135  1      
  136  1        ///  -----------------------------------------------------------------------
  137  1        ///  Configuration of CAPCOM2 Timer 7:
  138  1        ///  -----------------------------------------------------------------------
  139  1        ///  - timer 7 works in timer mode
  140  1        ///  - prescaler factor is 8
  141  1        ///  - timer 7 run bit is reset
  142  1      
  143  1        ///  -----------------------------------------------------------------------
  144  1        ///  Configuration of CAPCOM2 Timer 8:
  145  1        ///  -----------------------------------------------------------------------
  146  1        ///  - timer 8 works in timer mode
  147  1        ///  - prescaler factor is 8
  148  1        ///  - timer 8 run bit is reset
  149  1      
  150  1      
  151  1        CC2_T78CON     =  0x0000;      // load CAPCOM2 timer 7 and timer 8 control 
  152  1                                       // register
  153  1      
  154  1        CC2_T7         =  0x0000;      // load CAPCOM2 timer 7 register
  155  1      
  156  1        CC2_T7REL      =  0x0000;      // load CAPCOM2 timer 7 reload register
  157  1      
  158  1        CC2_T8         =  0x0000;      // load CAPCOM2 timer 8 register
  159  1      
  160  1        CC2_T8REL      =  0x0000;      // load CAPCOM2 timer 8 reload register
  161  1      
  162  1        ///  -----------------------------------------------------------------------
  163  1        ///  Configuration of the used CAPCOM2 Timer Port Pins:
  164  1        ///  -----------------------------------------------------------------------
  165  1      
  166  1      
  167  1        ///  -----------------------------------------------------------------------
  168  1        ///  Configuration of the used CAPCOM2 Timer Interrupts:
  169  1        ///  -----------------------------------------------------------------------
  170  1      
  171  1      
  172  1        ///  -----------------------------------------------------------------------
  173  1        ///  Configuration of the used CAPCOM2 Channel 16:
  174  1        ///  -----------------------------------------------------------------------
  175  1        ///  - capture on positive transition (falling edge) at pin CC16IO (P9.0)
  176  1        ///  - CC16 allocated to CAPCOM2 timer 7
  177  1        ///  - single event mode is enabled
  178  1        ///  - single event is disabled
C166 COMPILER V7.53.0.0, CC2                                                               09/03/2014 17:57:04 PAGE 4   

  179  1      
  180  1      
  181  1        CC2_CC16       =  0x0000;      // load CAPCOM2 channel 16 register
  182  1      
  183  1        ///  -----------------------------------------------------------------------
  184  1        ///  Configuration of the used CAPCOM2 Channel 17:
  185  1        ///  -----------------------------------------------------------------------
  186  1        ///  - capture on positive transition (falling edge) at pin CC17IO (P9.1)
  187  1        ///  - CC17 allocated to CAPCOM2 timer 7
  188  1        ///  - single event mode is enabled
  189  1        ///  - single event is enabled
  190  1      
  191  1      
  192  1        CC2_CC17       =  0x0000;      // load CAPCOM2 channel 17 register
  193  1      
  194  1        ///  -----------------------------------------------------------------------
  195  1        ///  Configuration of the used CAPCOM2 Channel 18:
  196  1        ///  -----------------------------------------------------------------------
  197  1        ///  - channel 18 is disabled
  198  1      
  199  1        CC2_CC18       =  0x0000;      // load CAPCOM2 channel 18 register
  200  1      
  201  1        ///  -----------------------------------------------------------------------
  202  1        ///  Configuration of the used CAPCOM2 Channel 19:
  203  1        ///  -----------------------------------------------------------------------
  204  1        ///  - channel 19 is disabled
  205  1      
  206  1        CC2_CC19       =  0x0000;      // load CAPCOM2 channel 19 register
  207  1      
  208  1        ///  -----------------------------------------------------------------------
  209  1        ///  Configuration of the used CAPCOM2 Channel 20:
  210  1        ///  -----------------------------------------------------------------------
  211  1        ///  - channel 20 is disabled
  212  1      
  213  1        CC2_CC20       =  0x0000;      // load CAPCOM2 channel 20 register
  214  1      
  215  1        ///  -----------------------------------------------------------------------
  216  1        ///  Configuration of the used CAPCOM2 Channel 21:
  217  1        ///  -----------------------------------------------------------------------
  218  1        ///  - channel 21 is disabled
  219  1      
  220  1        CC2_CC21       =  0x0000;      // load CAPCOM2 channel 21 register
  221  1      
  222  1        ///  -----------------------------------------------------------------------
  223  1        ///  Configuration of the used CAPCOM2 Channel 22:
  224  1        ///  -----------------------------------------------------------------------
  225  1        ///  - channel 22 is disabled
  226  1      
  227  1        CC2_CC22       =  0x0000;      // load CAPCOM2 channel 22 register
  228  1      
  229  1        ///  -----------------------------------------------------------------------
  230  1        ///  Configuration of the used CAPCOM2 Channel 23:
  231  1        ///  -----------------------------------------------------------------------
  232  1        ///  - channel 23 is disabled
  233  1      
  234  1        CC2_CC23       =  0x0000;      // load CAPCOM2 channel 23 register
  235  1      
  236  1        ///  -----------------------------------------------------------------------
  237  1        ///  Configuration of the used CAPCOM2 Channel 24:
  238  1        ///  -----------------------------------------------------------------------
  239  1        ///  - channel 24 is disabled
  240  1      
C166 COMPILER V7.53.0.0, CC2                                                               09/03/2014 17:57:04 PAGE 5   

  241  1        CC2_CC24       =  0x0000;      // load CAPCOM2 channel 24 register
  242  1      
  243  1        ///  -----------------------------------------------------------------------
  244  1        ///  Configuration of the used CAPCOM2 Channel 25:
  245  1        ///  -----------------------------------------------------------------------
  246  1        ///  - channel 25 is disabled
  247  1      
  248  1        CC2_CC25       =  0x0000;      // load CAPCOM2 channel 25 register
  249  1      
  250  1        ///  -----------------------------------------------------------------------
  251  1        ///  Configuration of the used CAPCOM2 Channel 26:
  252  1        ///  -----------------------------------------------------------------------
  253  1        ///  - channel 26 is disabled
  254  1      
  255  1        CC2_CC26       =  0x0000;      // load CAPCOM2 channel 26 register
  256  1      
  257  1        ///  -----------------------------------------------------------------------
  258  1        ///  Configuration of the used CAPCOM2 Channel 27:
  259  1        ///  -----------------------------------------------------------------------
  260  1        ///  - channel 27 is disabled
  261  1      
  262  1        CC2_CC27       =  0x0000;      // load CAPCOM2 channel 27 register
  263  1      
  264  1        ///  -----------------------------------------------------------------------
  265  1        ///  Configuration of the used CAPCOM2 Channel 28:
  266  1        ///  -----------------------------------------------------------------------
  267  1        ///  - channel 28 is disabled
  268  1      
  269  1        CC2_CC28       =  0x0000;      // load CAPCOM2 channel 28 register
  270  1      
  271  1        ///  -----------------------------------------------------------------------
  272  1        ///  Configuration of the used CAPCOM2 Channel 29:
  273  1        ///  -----------------------------------------------------------------------
  274  1        ///  - channel 29 is disabled
  275  1      
  276  1        CC2_CC29       =  0x0000;      // load CAPCOM2 channel 29 register
  277  1      
  278  1        ///  -----------------------------------------------------------------------
  279  1        ///  Configuration of the used CAPCOM2 Channel 30:
  280  1        ///  -----------------------------------------------------------------------
  281  1        ///  - channel 30 is disabled
  282  1      
  283  1        CC2_CC30       =  0x0000;      // load CAPCOM2 channel 30 register
  284  1      
  285  1        ///  -----------------------------------------------------------------------
  286  1        ///  Configuration of the used CAPCOM2 Channel 31:
  287  1        ///  -----------------------------------------------------------------------
  288  1        ///  - channel 31 is disabled
  289  1      
  290  1        CC2_CC31       =  0x0000;      // load CAPCOM2 channel 31 register
  291  1      
  292  1        CC2_M4         =  0x0022;      // load CAPCOM2 mode register 4
  293  1        CC2_M5         =  0x0000;      // load CAPCOM2 mode register 5
  294  1        CC2_M6         =  0x0000;      // load CAPCOM2 mode register 6
  295  1        CC2_M7         =  0x0000;      // load CAPCOM2 mode register 7
  296  1      
  297  1        CC2_DRM        =  0x0000;      // load CAPCOM2 double-register mode register
  298  1      
  299  1        CC2_SEM        =  0x0003;      // load CAPCOM2 single event mode register
  300  1      
  301  1        CC2_SEE        =  0x0002;      // load CAPCOM2 single event enable register
  302  1      
C166 COMPILER V7.53.0.0, CC2                                                               09/03/2014 17:57:04 PAGE 6   

  303  1        CC2_OUT        =  0x0000;      // load CAPCOM2 compare output register
  304  1      
  305  1        ///  -----------------------------------------------------------------------
  306  1        ///  Configuration of the used CAPCOM2 Channel Port Pins:
  307  1        ///  -----------------------------------------------------------------------
  308  1        ///  - P9.0 is used for CAPCOM2 Input (CC16IO)
  309  1        ///  - P9.1 is used for CAPCOM2 Input (CC17IO)
  310  1      
  311  1      
  312  1        ///  -----------------------------------------------------------------------
  313  1        ///  Configuration of the used CAPCOM2 Channels Interrupts:
  314  1        ///  -----------------------------------------------------------------------
  315  1        ///  CC16 service request node configuration:
  316  1        ///  - CC16 interrupt priority level (ILVL) = 7
  317  1        ///  - CC16 interrupt group level (GLVL) = 0
  318  1        ///  - CC16 group priority extension (GPX) = 0
  319  1      
  320  1        CC2_CC16IC     =  0x005C;     
  321  1      
  322  1      
  323  1        ///  CC17 service request node configuration:
  324  1        ///  - CC17 interrupt priority level (ILVL) = 8
  325  1        ///  - CC17 interrupt group level (GLVL) = 0
  326  1        ///  - CC17 group priority extension (GPX) = 0
  327  1      
  328  1        CC2_CC17IC     =  0x0060;     
  329  1      
  330  1      
  331  1      
  332  1        // USER CODE BEGIN (Init,3)
  333  1      
  334  1        // USER CODE END
  335  1      
  336  1      } //  End of function CC2_vInit
  337         
  338         
  339         //****************************************************************************
  340         // @Function      void CC2_viCC16(void) 
  341         //
  342         //----------------------------------------------------------------------------
  343         // @Description   This is the interrupt service routine for the CAPCOM2 
  344         //                register CC16. If the content of the corresponding compare 
  345         //                timer (configurable) equals the content of the 
  346         //                capture/compare register CC16 or if a capture event occurs 
  347         //                at the associated port pin, the interrupt request flag is 
  348         //                set and an interrupt is triggered (only if enabled).
  349         //                Please note that you have to add application specific code 
  350         //                to this function.
  351         //
  352         //----------------------------------------------------------------------------
  353         // @Returnvalue   None
  354         //
  355         //----------------------------------------------------------------------------
  356         // @Parameters    None
  357         //
  358         //----------------------------------------------------------------------------
  359         // @Date          2014/9/3
  360         //
  361         //****************************************************************************
  362         
  363         // USER CODE BEGIN (CC16,1)
  364         
C166 COMPILER V7.53.0.0, CC2                                                               09/03/2014 17:57:04 PAGE 7   

  365         // USER CODE END
  366         
  367         void CC2_viCC16(void) interrupt CC2_CC16INT using RB_LEVEL7
  368         {
  369  1        // USER CODE BEGIN (CC16,2)
  370  1        can1_recv_flag=1;
  371  1        // USER CODE END
  372  1      
  373  1      } //  End of function CC2_viCC16
  374         
  375         
  376         //****************************************************************************
  377         // @Function      void CC2_viCC17(void) 
  378         //
  379         //----------------------------------------------------------------------------
  380         // @Description   This is the interrupt service routine for the CAPCOM2 
  381         //                register CC17. If the content of the corresponding compare 
  382         //                timer (configurable) equals the content of the 
  383         //                capture/compare register CC17 or if a capture event occurs 
  384         //                at the associated port pin, the interrupt request flag is 
  385         //                set and an interrupt is triggered (only if enabled).
  386         //                Please note that you have to add application specific code 
  387         //                to this function.
  388         //
  389         //----------------------------------------------------------------------------
  390         // @Returnvalue   None
  391         //
  392         //----------------------------------------------------------------------------
  393         // @Parameters    None
  394         //
  395         //----------------------------------------------------------------------------
  396         // @Date          2014/9/3
  397         //
  398         //****************************************************************************
  399         
  400         // USER CODE BEGIN (CC17,1)
  401         
  402         // USER CODE END
  403         
  404         void CC2_viCC17(void) interrupt CC2_CC17INT using RB_LEVEL8
  405         {
  406  1        // USER CODE BEGIN (CC17,2)
  407  1        can2_recv_flag=1; 
  408  1        // USER CODE END
  409  1      
  410  1      } //  End of function CC2_viCC17
  411         
  412         
  413         
  414         
  415         // USER CODE BEGIN (CC2_General,10)
  416         
  417         // USER CODE END
  418         


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         192     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
C166 COMPILER V7.53.0.0, CC2                                                               09/03/2014 17:57:04 PAGE 8   

  NEAR-DATA SIZE   =    --------     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
