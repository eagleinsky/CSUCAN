C166 COMPILER V7.53.0.0, MVB                                                               09/03/2014 10:38:10 PAGE 1   


C166 COMPILER V7.53.0.0, COMPILATION OF MODULE MVB
OBJECT MODULE PLACED IN .\obj\mvb.obj
COMPILER INVOKED BY: C:\Keil4\C166\BIN\C166.EXE source\mvb.c MODV2 BROWSE INCDIR(.\source;.\CANopen\include;.\CANopen\in
                    -clude\XC164_CANopen;..\keil4;.\CANopen\examples\XC164\Slave) MODV2 DEBUG PRINT(.\list\mvb.lst) TABS(2) OBJECT(.\obj\mvb.
                    -obj) 

 stmt lvl     source

    1         #include "MAIN.H"
    2         
    3         void mvb_init(unsigned int source1,unsigned int source2,unsigned int sink1,unsigned int sink2)
    4         {
    5  1        unsigned int i;
    6  1        for(i = 0; i < 0x400; i++)
    7  1        {
    8  2          *(p_mvb_mem + i) = 0x00;
    9  2          delay(1);
   10  2        } 
   11  1        *(p_mvb_mem+0x150) = 2;       // 2个源端口 2个宿端口
   12  1        *(p_mvb_mem+0x160) = (unsigned char) source1;    //源端口1地址低八位
   13  1        *(p_mvb_mem+0x161) =  (unsigned char)(source1>>8);    //源端口1地址高八位
   14  1        
   15  1        *(p_mvb_mem+0x182) =  (unsigned char)source2;    //源端口2地址低八位
   16  1        *(p_mvb_mem+0x183) =  (unsigned char)(source2>>8);    //源端口2口地址高八位
   17  1      
   18  1        *(p_mvb_mem+0x1A4) = (unsigned char)sink1;;    //宿端口1地址低八位
   19  1        *(p_mvb_mem+0x1A5) = (unsigned char)(sink1>>8);    //宿端口1地址高八位
   20  1        
   21  1        *(p_mvb_mem+0x1C6) = (unsigned char)sink2;    //宿端口2地址低八位
   22  1        *(p_mvb_mem+0x1C7) = (unsigned char)(sink1>>8);   //宿端口2地址高八位
   23  1        
   24  1        
   25  1      }
   26         
   27         void write_source_port(unsigned char port_num,unsigned char * src_buffer)
   28         { 
   29  1        unsigned char i = 0;  
   30  1        if(port_num==1)
   31  1        {
   32  2        for(i = 0; i < 32; i++)
   33  2        {
   34  3          *(p_mvb_mem + 0x162 + i) = *(src_buffer + i);  
   35  3          delay(1);
   36  3        }
   37  2        }
   38  1        else if(port_num==2)
   39  1        {
   40  2        for(i = 0; i < 32; i++)
   41  2        {
   42  3          *(p_mvb_mem + 0x184 + i) = *(src_buffer + i);  
   43  3          delay(1);
   44  3        }
   45  2        }
   46  1        
   47  1      }
   48         
   49         void read_sink_port(unsigned char port_num,unsigned char * dst_buffer)
   50         {
   51  1        unsigned char i = 0;
   52  1        if(port_num==1)
   53  1        {
C166 COMPILER V7.53.0.0, MVB                                                               09/03/2014 10:38:10 PAGE 2   

   54  2        for(i = 0; i < 32; i++)
   55  2        {
   56  3          *(dst_buffer + i) = *(p_mvb_mem + 0x1a6 + i);   
   57  3          delay(1);
   58  3        }
   59  2        }
   60  1        else if(port_num==2)
   61  1        for(i = 0; i < 32; i++)
   62  1        {
   63  2        *(dst_buffer + i) = *(p_mvb_mem + 0x1c8 + i);   
   64  2          delay(1);
   65  2        }
   66  1      }
   67         
   68         


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         366     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =    --------     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
