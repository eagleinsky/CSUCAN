C166 COMPILER V7.53.0.0, IO                                                                09/03/2014 10:38:09 PAGE 1   


C166 COMPILER V7.53.0.0, COMPILATION OF MODULE IO
OBJECT MODULE PLACED IN .\obj\IO.obj
COMPILER INVOKED BY: C:\Keil4\C166\BIN\C166.EXE IO.C MODV2 BROWSE INCDIR(.\source;.\CANopen\include;.\CANopen\include\XC
                    -164_CANopen;..\keil4;.\CANopen\examples\XC164\Slave) MODV2 DEBUG PRINT(.\list\IO.lst) TABS(2) OBJECT(.\obj\IO.obj) 

 stmt lvl     source

    1         //****************************************************************************
    2         // @Module        Parallel Ports
    3         // @Filename      IO.C
    4         // @Project       EBCU_CPU.dav
    5         //----------------------------------------------------------------------------
    6         // @Controller    Infineon XC164CS-16F20
    7         //
    8         // @Compiler      Keil
    9         //
   10         // @Codegenerator 3.0
   11         //
   12         // @Description   This file contains functions that use the IO module.
   13         //
   14         //----------------------------------------------------------------------------
   15         // @Date          2014/7/1 15:42:50
   16         //
   17         //****************************************************************************
   18         
   19         // USER CODE BEGIN (IO_General,1)
   20         
   21         // USER CODE END
   22         
   23         
   24         
   25         //****************************************************************************
   26         // @Project Includes
   27         //****************************************************************************
   28         
   29         #include "MAIN.H"
   30         
   31         // USER CODE BEGIN (IO_General,2)
   32         
   33         // USER CODE END
   34         
   35         
   36         //****************************************************************************
   37         // @Macros
   38         //****************************************************************************
   39         
   40         // USER CODE BEGIN (IO_General,3)
   41         
   42         // USER CODE END
   43         
   44         
   45         //****************************************************************************
   46         // @Defines
   47         //****************************************************************************
   48         
   49         // USER CODE BEGIN (IO_General,4)
   50         
   51         // USER CODE END
   52         
   53         
   54         //****************************************************************************
C166 COMPILER V7.53.0.0, IO                                                                09/03/2014 10:38:09 PAGE 2   

   55         // @Typedefs
   56         //****************************************************************************
   57         
   58         // USER CODE BEGIN (IO_General,5)
   59         
   60         // USER CODE END
   61         
   62         
   63         //****************************************************************************
   64         // @Imported Global Variables
   65         //****************************************************************************
   66         
   67         // USER CODE BEGIN (IO_General,6)
   68         
   69         // USER CODE END
   70         
   71         
   72         //****************************************************************************
   73         // @Global Variables
   74         //****************************************************************************
   75         
   76         // USER CODE BEGIN (IO_General,7)
   77         
   78         // USER CODE END
   79         
   80         
   81         //****************************************************************************
   82         // @External Prototypes
   83         //****************************************************************************
   84         
   85         // USER CODE BEGIN (IO_General,8)
   86         
   87         // USER CODE END
   88         
   89         
   90         //****************************************************************************
   91         // @Prototypes Of Local Functions
   92         //****************************************************************************
   93         
   94         // USER CODE BEGIN (IO_General,9)
   95         
   96         // USER CODE END
   97         
   98         
   99         //****************************************************************************
  100         // @Function      void IO_vInit(void) 
  101         //
  102         //----------------------------------------------------------------------------
  103         // @Description   This is the initialization function of the IO function 
  104         //                library. It is assumed that the SFRs used by this library 
  105         //                are in its reset state. 
  106         //
  107         //----------------------------------------------------------------------------
  108         // @Returnvalue   None
  109         //
  110         //----------------------------------------------------------------------------
  111         // @Parameters    None
  112         //
  113         //----------------------------------------------------------------------------
  114         // @Date          2014/7/1
  115         //
  116         //****************************************************************************
C166 COMPILER V7.53.0.0, IO                                                                09/03/2014 10:38:09 PAGE 3   

  117         
  118         // USER CODE BEGIN (IO_Function,1)
  119         
  120         // USER CODE END
  121         
  122         void IO_vInit(void)
  123         {
  124  1        // USER CODE BEGIN (IO_Function,2)
  125  1      
  126  1        // USER CODE END
  127  1      
  128  1        ///  -----------------------------------------------------------------------
  129  1        ///  General Port Settings:
  130  1        ///  -----------------------------------------------------------------------
  131  1        PICON          =  0x0000;      // load input configuration register
  132  1      
  133  1        ///  -----------------------------------------------------------------------
  134  1        ///  Configuration of Port P0H:
  135  1        ///  -----------------------------------------------------------------------
  136  1        ///  P0H.3 is used as general purpose output
  137  1        ///  - the pin status is low level
  138  1        ///  P0H.4 is used as general purpose output
  139  1        ///  - the pin status is low level
  140  1      
  141  1        ///  P0H.0 - P0H.3 output driver characteristic: strong driver
  142  1        ///  P0H.4 - P0H.7 output driver characteristic: strong driver
  143  1      
  144  1        ///  P0H.0 - P0H.3 output edge characteristic: sharp edge mode
  145  1        ///  P0H.4 - P0H.7 output edge characteristic: sharp edge mode
  146  1      
  147  1        P0H            =  0x0000;      // load data register
  148  1        POCON0H        =  0x0000;      // load output control register
  149  1        DP0H           =  0x0018;      // load direction register
  150  1      
  151  1        ///  -----------------------------------------------------------------------
  152  1        ///  Configuration of Port P0L:
  153  1        ///  -----------------------------------------------------------------------
  154  1        ///  P0L.0 is used as alternate output for the Port Pin (AD0)
  155  1        ///  P0L.1 is used as alternate output for the Port Pin (AD1)
  156  1        ///  P0L.2 is used as alternate output for the Port Pin (AD2)
  157  1        ///  P0L.3 is used as alternate output for the Port Pin (AD3)
  158  1        ///  P0L.4 is used as alternate output for the Port Pin (AD4)
  159  1        ///  P0L.5 is used as alternate output for the Port Pin (AD5)
  160  1        ///  P0L.6 is used as alternate output for the Port Pin (AD6)
  161  1        ///  P0L.7 is used as alternate output for the Port Pin (AD7)
  162  1      
  163  1        ///  P0L.0 - P0L.3 output driver characteristic: strong driver
  164  1        ///  P0L.4 - P0L.7 output driver characteristic: strong driver
  165  1      
  166  1        ///  P0L.0 - P0L.3 output edge characteristic: sharp edge mode
  167  1        ///  P0L.4 - P0L.7 output edge characteristic: sharp edge mode
  168  1      
  169  1        P0L            =  0x0000;      // load data register
  170  1        POCON0L        =  0x0000;      // load output control register
  171  1        DP0L           =  0x0000;      // load direction register
  172  1      
  173  1        ///  -----------------------------------------------------------------------
  174  1        ///  Configuration of Port P1H:
  175  1        ///  -----------------------------------------------------------------------
  176  1        ///  P1H.0 is used as alternate output for the Port Pin (A8)
  177  1        ///  P1H.1 is used as alternate output for the Port Pin (A9)
  178  1        ///  P1H.2 is used as alternate output for the Port Pin (A10)
C166 COMPILER V7.53.0.0, IO                                                                09/03/2014 10:38:09 PAGE 4   

  179  1        ///  P1H.3 is used as alternate output for the Port Pin (A11)
  180  1        ///  P1H.4 is used as alternate output for the Port Pin (A12)
  181  1        ///  P1H.5 is used as alternate output for the Port Pin (A13)
  182  1        ///  P1H.6 is used as alternate output for the Port Pin (A14)
  183  1        ///  P1H.7 is used as alternate output for the Port Pin (A15)
  184  1      
  185  1        ///  P1H.0 - P1H.3 output driver characteristic: strong driver
  186  1        ///  P1H.4 - P1H.7 output driver characteristic: strong driver
  187  1      
  188  1        ///  P1H.0 - P1H.3 output edge characteristic: sharp edge mode
  189  1        ///  P1H.4 - P1H.7 output edge characteristic: sharp edge mode
  190  1      
  191  1        P1H            =  0x0000;      // load data register
  192  1        ALTSEL0P1H     =  0x0000;      // load alternate output function select 
  193  1                                       // register 0
  194  1        POCON1H        =  0x0000;      // load output control register
  195  1        DP1H           =  0x0000;      // load direction register
  196  1      
  197  1        ///  -----------------------------------------------------------------------
  198  1        ///  Configuration of Port P1L:
  199  1        ///  -----------------------------------------------------------------------
  200  1        ///  P1L.0 is used as alternate output for the Port Pin (A0)
  201  1        ///  P1L.1 is used as alternate output for the Port Pin (A1)
  202  1        ///  P1L.1 is used as alternate output for the Port Pin (A1)
  203  1        ///  P1L.2 is used as alternate output for the Port Pin (A2)
  204  1        ///  P1L.3 is used as alternate output for the Port Pin (A3)
  205  1        ///  P1L.4 is used as alternate output for the Port Pin (A4)
  206  1        ///  P1L.5 is used as alternate output for the Port Pin (A5)
  207  1        ///  P1L.6 is used as alternate output for the Port Pin (A6)
  208  1        ///  P1L.7 is used as alternate output for the Port Pin (A7)
  209  1      
  210  1        ///  P1L.0 - P1L.3 output driver characteristic: strong driver
  211  1        ///  P1L.4 - P1L.7 output driver characteristic: strong driver
  212  1      
  213  1        ///  P1L.0 - P1L.3 output edge characteristic: sharp edge mode
  214  1        ///  P1L.4 - P1L.7 output edge characteristic: sharp edge mode
  215  1      
  216  1        P1L            =  0x0000;      // load data register
  217  1        ALTSEL0P1L     =  0x0000;      // load alternate output function select 
  218  1                                       // register 0
  219  1        POCON1L        =  0x0000;      // load output control register
  220  1        DP1L           =  0x0000;      // load direction register
  221  1      
  222  1        ///  -----------------------------------------------------------------------
  223  1        ///  Configuration of Port P3:
  224  1        ///  -----------------------------------------------------------------------
  225  1        ///  - no pin of port P3 is used
  226  1      
  227  1        ODP3           =  0x0000;      // load open-drain register
  228  1        P3             =  0x0000;      // load data register
  229  1        ALTSEL0P3      =  0x0000;      // load alternate output function select 
  230  1                                       // register 0
  231  1        ALTSEL1P3      =  0x0000;      // load alternate output function select 
  232  1                                       // register 1
  233  1        POCON3         =  0x0000;      // load output control register
  234  1        DP3            =  0x0000;      // load direction register
  235  1      
  236  1        ///  -----------------------------------------------------------------------
  237  1        ///  Configuration of Port P4:
  238  1        ///  -----------------------------------------------------------------------
  239  1        ///  P4.0 is used as alternate input for the Port Pin (A16)
  240  1        ///  P4.1 is used as alternate input for the Port Pin (A17)
C166 COMPILER V7.53.0.0, IO                                                                09/03/2014 10:38:09 PAGE 5   

  241  1        ///  P4.2 is used as alternate input for the Port Pin (A18)
  242  1        ///  P4.3 is used as alternate input for the Port Pin (A19)
  243  1        ///  P4.6 is used as general purpose output
  244  1        ///  - push/pull output is selected
  245  1        ///  - the pin status is low level
  246  1        ///  P4.7 is used as general input
  247  1      
  248  1        ///  P4.0 - P4.7 threshold type: TTL input
  249  1      
  250  1        ///  P4.0 - P4.3 output driver characteristic: strong driver
  251  1        ///  P4.4 - P4.7 output driver characteristic: strong driver
  252  1      
  253  1        ///  P4.0 - P4.3 output edge characteristic: sharp edge mode
  254  1        ///  P4.4 - P4.7 output edge characteristic: sharp edge mode
  255  1      
  256  1        ODP4           =  0x0000;      // load open-drain register
  257  1        P4             =  0x0000;      // load data register
  258  1        ALTSEL0P4      =  0x0000;      // load alternate output function select 
  259  1                                       // register 0
  260  1        ALTSEL1P4      =  0x0000;      // load alternate output function select 
  261  1                                       // register 1
  262  1        POCON4         =  0x0000;      // load output control register
  263  1        DP4            =  0x0040;      // load direction register
  264  1      
  265  1        ///  -----------------------------------------------------------------------
  266  1        ///  Configuration of Port P5:
  267  1        ///  -----------------------------------------------------------------------
  268  1        ///  P5.0 is used as general input
  269  1        ///  P5.1 is used as general input
  270  1        ///  P5.2 is used as general input
  271  1        ///  P5.3 is used as general input
  272  1        ///  P5.4 is used as general input
  273  1      
  274  1      
  275  1        ///  -----------------------------------------------------------------------
  276  1        ///  Configuration of Port P9:
  277  1        ///  -----------------------------------------------------------------------
  278  1        ///  P9.0 is used as alternate input for the CAPCOM2 Input (CC16IO)
  279  1        ///  P9.1 is used as alternate input for the CAPCOM2 Input (CC17IO)
  280  1      
  281  1        ///  P9.0 - P9.7 threshold type: TTL input
  282  1      
  283  1        ///  P9.0 - P9.3 output driver characteristic: strong driver
  284  1        ///  P9.4 - P9.7 output driver characteristic: strong driver
  285  1      
  286  1        ///  P9.0 - P9.3 output edge characteristic: sharp edge mode
  287  1        ///  P9.4 - P9.7 output edge characteristic: sharp edge mode
  288  1      
  289  1        ODP9           =  0x0000;      // load open-drain register
  290  1        P9             =  0x0000;      // load data register
  291  1        ALTSEL0P9      =  0x0000;      // load alternate output function select 
  292  1                                       // register 0
  293  1        ALTSEL1P9      =  0x0000;      // load alternate output function select 
  294  1                                       // register 1
  295  1        POCON9         =  0x0000;      // load output control register
  296  1        DP9            =  0x0000;      // load direction register
  297  1      
  298  1        ///  -----------------------------------------------------------------------
  299  1        ///  Configuration of Port P20:
  300  1        ///  -----------------------------------------------------------------------
  301  1        ///  P20.12 is used as general purpose output
  302  1        ///  - the pin status is low level
C166 COMPILER V7.53.0.0, IO                                                                09/03/2014 10:38:09 PAGE 6   

  303  1      
  304  1        ///  P20.0 - P20.7 threshold type: TTL input
  305  1        ///  P20.8 - P20.15 threshold type: TTL input
  306  1      
  307  1        ///  P20.0 - P20.3 output driver characteristic: strong driver
  308  1        ///  P20.4 - P20.7 output driver characteristic: strong driver
  309  1        ///  P20.12 - P20.15 output driver characteristic: strong driver
  310  1      
  311  1        ///  P20.0 - P20.3 output edge characteristic: sharp edge mode
  312  1        ///  P20.4 - P20.7 output edge characteristic: sharp edge mode
  313  1        ///  P20.12 - P20.15 output edge characteristic: sharp edge mode
  314  1      
  315  1        P20            =  0x0000;      // load data register
  316  1        POCON20        =  0x0000;      // load output control register
  317  1        DP20           =  0x1000;      // load direction register
  318  1      
  319  1      
  320  1        // USER CODE BEGIN (IO_Function,3)
  321  1      
  322  1        // USER CODE END
  323  1      
  324  1      } //  End of function IO_vInit
  325         
  326         
  327         
  328         
  329         // USER CODE BEGIN (IO_General,10)
  330         
  331         // USER CODE END
  332         


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         166     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =    --------     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
